#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã mozgach108
"""

import asyncio
import sys
import logging
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.insert(0, str(Path(__file__).parent))

from src.mozgach108_system import Mozgach108System
from config import config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=getattr(logging, config.get("system.log_level", "INFO")),
    format=config.get("logging.format", "%(asctime)s - %(name)s - %(levelname)s - %(message)s"),
    handlers=[
        logging.StreamHandler(),
        logging.FileHandler("mozgach108.log", encoding="utf-8")
    ]
)

logger = logging.getLogger(__name__)


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã mozgach108...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—É
        system = Mozgach108System()
        
        # –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        await asyncio.sleep(3)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = system.get_system_stats()
        logger.info("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:")
        logger.info(f"   –ó–∞–≥—Ä—É–∂–µ–Ω–æ –º–æ–¥–µ–ª–µ–π: {stats['loaded_models']}")
        logger.info(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤: {stats['active_domains']}")
        logger.info(f"   –°–∏–ª–∞ –∑–∞–ø—É—Ç–∞–Ω–Ω–æ—Å—Ç–∏: {stats['quantum_entanglement_strength']:.3f}")
        logger.info(f"   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: {stats['memory_usage_mb']}MB")
        
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        logger.info("üí¨ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ. –í–≤–µ–¥–∏—Ç–µ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞.")
        
        while True:
            try:
                query = input("\nüîÆ –í–∞—à –∑–∞–ø—Ä–æ—Å: ").strip()
                
                if query.lower() in ['exit', 'quit', '–≤—ã—Ö–æ–¥']:
                    break
                
                if not query:
                    continue
                
                logger.info(f"üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {query[:100]}...")
                response = await system.query(query)
                
                print(f"\nüîÆ mozgach108: {response.content}")
                print(f"üéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {response.confidence:.2f}")
                print(f"‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {response.processing_time:.2f}—Å")
                print(f"üìä –î–æ–º–µ–Ω—ã: {list(response.domain_weights.keys())}")
                
            except KeyboardInterrupt:
                break
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        await system.shutdown()
        logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ mozgach108 –∑–∞–≤–µ—Ä—à–∏–ª–∞ —Ä–∞–±–æ—Ç—É")
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
